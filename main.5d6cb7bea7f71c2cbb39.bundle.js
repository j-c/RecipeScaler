webpackJsonp([1,4],{382:function(e,n){function t(e){throw new Error("Cannot find module '"+e+"'.")}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id=382},383:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=t(471),r=t(0),s=t(506),o=t(502);s.a.production&&t.i(r.a)(),t.i(i.a)().bootstrapModule(o.a)},501:function(e,n,t){"use strict";var i=t(0);t.d(n,"a",function(){return o});var r=this&&this.__decorate||function(e,n,t,i){var r,s=arguments.length,o=s<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(o=(s<3?r(o):s>3?r(n,t,o):r(n,t))||o);return s>3&&o&&Object.defineProperty(n,t,o),o},s=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},o=function(){function e(){this.title="app works!"}return e=r([t.i(i._4)({selector:"app-root",template:t(660),styles:[t(658)]}),s("design:paramtypes",[])],e)}()},502:function(e,n,t){"use strict";var i=t(147),r=t(0),s=t(461),o=t(467),a=t(324),c=t(501),d=t(503);t.d(n,"a",function(){return f});var u=this&&this.__decorate||function(e,n,t,i){var r,s=arguments.length,o=s<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(o=(s<3?r(o):s>3?r(n,t,o):r(n,t))||o);return s>3&&o&&Object.defineProperty(n,t,o),o},p=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},l=[{path:"r/:base64recipe",component:d.a},{path:"r",component:d.a},{path:"",redirectTo:"/r",pathMatch:"full"}],f=function(){function e(){}return e=u([t.i(r.b)({declarations:[c.a,d.a],imports:[i.a,s.a,o.a,a.a.forRoot(l)],providers:[],bootstrap:[c.a]}),p("design:paramtypes",[])],e)}()},503:function(e,n,t){"use strict";var i=t(0),r=t(83),s=t(324),o=t(505);t.d(n,"a",function(){return d});var a=this&&this.__decorate||function(e,n,t,i){var r,s=arguments.length,o=s<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,i);else for(var a=e.length-1;a>=0;a--)(r=e[a])&&(o=(s<3?r(o):s>3?r(n,t,o):r(n,t))||o);return s>3&&o&&Object.defineProperty(n,t,o),o},c=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},d=function(){function e(e,n){this.location=e,this.route=n,this.editMode=!1,this.recipe=l,this.generateUrlForRecipe(l)}return Object.defineProperty(e.prototype,"recipe",{get:function(){return this._recipe},set:function(e){this._recipe=e,this.recipeViewModel=new o.a(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){try{var e=this.route.snapshot.params.base64recipe;if(e&&e.length>0){var n=JSON.parse(atob(e));this.recipe=n,console.log("Recipe successfuly parsed from route param.")}else console.log("No recipe in route param.")}catch(e){console.error("Could not parse recipe in route param.")}},e.prototype.updateScaledValues=function(e){var n=e.scaledMeasure/e.measure;this.recipeViewModel.ingredients.forEach(function(t,i){t!==e&&(t.scaledMeasure=n*t.measure)}),this.recipeViewModel.recipeNumberOfServes>0&&(this.recipeViewModel.desiredNumberOfServes=this.recipeViewModel.recipeNumberOfServes*n)},e.prototype.updateServes=function(e){var n=e/this.recipeViewModel.recipeNumberOfServes;this.recipeViewModel.ingredients.forEach(function(e,t){e.scaledMeasure=n*e.measure})},e.prototype.generateUrlForRecipe=function(e){return window.location.origin+"/r/"+btoa(JSON.stringify(e))},e.prototype.editRecipe=function(e){this.editMode=!0},e.prototype.saveRecipe=function(){this.editMode=!1;try{this.recipeJson&&this.recipeJson.length>0&&(this.recipe=JSON.parse(this.recipeJson))}catch(e){console.error(e),window.alert("Error in Recipe JSON.")}},e=a([t.i(i._4)({selector:"app-recipe",providers:[r.a,{provide:r.b,useClass:r.f}],template:t(661),styles:[t(659)]}),c("design:paramtypes",["function"==typeof(n="undefined"!=typeof r.a&&r.a)&&n||Object,"function"==typeof(d="undefined"!=typeof s.b&&s.b)&&d||Object])],e);var n,d}(),u={name:"Rittenhouse Rye whiskey",description:"50% ABV",measure:120,unitOfMeasure:"ml"},p=[];p.push({name:"Carpano Antica Formula vermouth",description:"16.5% ABV",measure:53,unitOfMeasure:"ml"}),p.push({name:"Angostura bitters",measure:4,unitOfMeasure:"dashes"}),p.push({name:"Brandied cherries or orange twists",measure:2,unitOfMeasure:""});var l={name:"Manhattans for two",description:"<p>Shake with ice and serve in a chilled coupe glass.</p><p>From Liquid Intelligence by Dave Arnold</p>",baseIngredient:u,additionalIngredients:p,numberOfServes:2}},504:function(e,n,t){"use strict";t.d(n,"a",function(){return i});var i=function(){function e(e,n){this.name=e.name,this.description=e.description;var t,i;if(t=e)this.measure=t.measure,this.unitOfMeasure=t.unitOfMeasure,this.scaledMeasure=this.measure,n?this.scaling=this.measure/n.measure:this.scaling=1;else{if(!(i=e))throw"Unknown recipe ingredient type";if(this.scaling=i.scaling,!n)throw"No base ingredient needed when using ScaledRecipeIngredient";this.unitOfMeasure=n.unitOfMeasure,this.measure=n.measure*this.scaling,this.scaledMeasure=this.measure}n?this.baseIngredientMeasure=n.measure:this.isBaseIngredient=!0}return e}()},505:function(e,n,t){"use strict";var i=t(504);t.d(n,"a",function(){return r});var r=function(){function e(e){if(this.name=e.name,this.description=e.description,this.recipeNumberOfServes=e.numberOfServes||0,this.desiredNumberOfServes=this.recipeNumberOfServes,this.ingredients=[],!e.baseIngredient)throw"No base ingredient specified";if(e.baseIngredient.measure<=0)throw"Base ingredient measure needs to be greater than 0";if(this.ingredients.push(new i.a(e.baseIngredient)),Array.isArray(e.additionalIngredients)&&e.additionalIngredients.length>0){var n=this.ingredients;e.additionalIngredients.forEach(function(t,r){n.push(new i.a(t,e.baseIngredient))})}else console.warn("Recipe only contains base ingredient")}return Object.defineProperty(e.prototype,"nameId",{get:function(){return this._nameId},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},set:function(e){this._name=e,this._nameId=e.toLowerCase().replace(/[^a-z]/g,"")},enumerable:!0,configurable:!0}),e}()},506:function(e,n,t){"use strict";t.d(n,"a",function(){return i});var i={production:!0}},658:function(e,n){e.exports=""},659:function(e,n){e.exports=""},660:function(e,n){e.exports='<div class="container">\n   <router-outlet></router-outlet>\n</div>'},661:function(e,n){e.exports='<h1>{{ recipeViewModel.name }}</h1>\n\n<div class="panel panel-default">\n  <div class="panel-body">\n    \n    <h4>Ingredients</h4>\n    <table class="table">\n      <colgroup>\n        <col style="width: 150px" />\n        <col style="width: 100px" />\n        <col style="width: 150px" />\n        <col />\n      </colgroup>\n      <thead>\n        <tr>\n          <th>Scaled</th>\n          <th>Scaling</th>\n          <th>Original measure</th>\n          <th>Ingredient</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor="let ingredient of recipeViewModel.ingredients; let index = index">\n          <td>\n            <div class="input-group">\n              <input\n                id="{{ recipeViewModel.nameId }}-ingredient-{{ index }}"\n                type="number"\n                class="form-control"\n                [(ngModel)]="ingredient.scaledMeasure"\n                (ngModelChange)="updateScaledValues(ingredient)"\n                min="0"\n                />\n              <span class="input-group-addon" *ngIf="ingredient.unitOfMeasure && ingredient.unitOfMeasure.length > 0">{{ ingredient.unitOfMeasure }}</span>\n            </div>\n          </td>\n          <td>\n            <div class="ingredient-list-item">\n              {{ ingredient.scaling | percent }}\n            </div>\n          </td>\n          <td>\n            <div class="ingredient-list-item">\n              {{ ingredient.measure }} {{ ingredient.unitOfMeasure }}\n            </div>\n          </td>\n          <td>\n            <div class="ingredient-list-item">\n              <div>{{ ingredient.name }}</div>\n              <div class="ingredient-description">{{ ingredient.description }}</div>\n            </div>\n          </td>\n        </tr>\n        <tr *ngIf="recipeViewModel.recipeNumberOfServes > 0">\n          <td>\n            <div class="input-group">\n              <input\n                type="number"\n                class="form-control"\n                [(ngModel)]="recipeViewModel.desiredNumberOfServes"\n                (ngModelChange)="updateServes(recipeViewModel.desiredNumberOfServes)"\n                min="0"\n                />  \n              <span class="input-group-addon">serves</span>\n            </div>\n          </td>\n          <td></td>\n          <td>\n            <div class="ingredient-list-item">\n              {{ recipeViewModel.recipeNumberOfServes }} serves\n            </div>\n          </td>\n          <td></td>\n      </tbody>\n    </table>\n\n    <div [hidden]="!recipeViewModel.description || recipeViewModel.description.length == 0">\n      <hr />\n      <h4>Description</h4>\n      <div [innerHTML]="recipeViewModel.description"></div>\n    </div>\n  </div>\n\n  <div class="panel-footer">\n    <div class="form-inline">\n      <div class="pull-left">\n        <div class="input-group">\n          <div class="input-group-addon">\n            <span class="glyphicon glyphicon-link" title="Url to this recipe"></span>\n          </div>\n          <input\n            class="form-control"\n            type="text"\n            [ngModel]="generateUrlForRecipe(recipe)"\n            onfocus="this.select();"\n            readonly />\n        </div>\n      </div>\n\n      <div class="pull-right">\n        <button class="btn btn-primary" (click)="editRecipe(recipe)" *ngIf="!editMode">\n            <span class="glyphicon glyphicon-pencil"></span> Edit recipe\n        </button>\n        \n        <button class="btn btn-success" (click)="saveRecipe()" *ngIf="editMode">\n            <span class="glyphicon glyphicon-ok"></span> Done\n        </button>\n      </div>\n    </div>\n    <div class="clearfix"></div>\n    <textarea *ngIf="editMode" class="form-control" (blur)="recipeJson = $event.target.value" rows="20">{{ recipe | json }}</textarea>\n  </div>\n</div>\n\n\n'},678:function(e,n,t){e.exports=t(383)}},[678]);